% Generated by roxygen2 (4.0.2): do not edit by hand
\name{arrayAnova}
\alias{arrayAnova}
\title{Perform ANOVA (potentially with TFCE correction) on arrays}
\usage{
arrayAnova(arraydat, factordef, bwdat = NULL, verbose = TRUE,
  nperm = 999L, useparallel = FALSE, ncores = NULL, par_method = "snow",
  cl = NULL, usetfce = TRUE, tfce_options = NULL, seed = NULL)
}
\arguments{
\item{arraydat}{a numeric array with named dimnames containing the EEG (or
other) data. Missing values are not allowed.}

\item{factordef}{a named list of factor definitions, containing the following
elements:
\itemize{
\item{between:}{character vector of between-subject factors (default: NULL)}
\item{within:}{character vector of within-subject factors (default: NULL)}
\item{w_id:}{name of the dimension which identifies the subjects
(default: "id")}
}}

\item{bwdat}{a data.frame which contains the identification codes
(factordef$w_id) and the group memberships (factordef$between) of the
subjects. Missing values are not allowed.}

\item{verbose}{logical value indicating if p-values and effect sizes should
be computed for the traditional ANOVA results}

\item{nperm}{integer value giving the number of permutations (default: 999L)}

\item{useparallel}{logical value; if TRUE (default), computations are done
in parallel}

\item{ncores}{integer value corresponding to the number of cores;
if NULL (default), it is set to the maximum number of cores available}

\item{par_method}{parallelization method; can be "snow" (default) or "mc"
(multicore)}

\item{cl}{a cluster definition for snow-type parallelization; if NULL
(default), it is set up automatically}

\item{usetfce}{logical value whether TFCE (threshold-free cluster enhancement)
correction should also be computed (default: TRUE)}

\item{tfce_options}{a named list containing the channel neighbourhood matrix
(named ChN) and the vector of the E/H parameters (named EH)}

\item{seed}{an integer value which specifies a seed (default: NULL)}
}
\value{
A list object with F values, TFCE-corrected F-values and
permutation-based p-values (if requested)
}
\description{
\code{arrayAnova} performs point-to-point ANOVAs on arrays. Permutation-based
p-values and Threshold-free Cluster Enhancement (TFCE) correction can be requested.
}
\details{
The function assumes that the input array contains at least two
named dimensions: chan (corresponding to the channels [electrodes]) and time
(corresponding to time points). All dimensions which are not listed as
within-subject factors are treated in a similar way as chan and time, that is
separate ANOVA-s are computed for each level of those dimensions.
}
\note{
The function computes type I p-values - this is correct if the design
is fully balanced and orthogonal (if the number of between-subject
factors is one, it may have slightly unequal group sizes).
}
\examples{
# example dataset
data(erps)
dat_id <- attr(erps, "id") # to get group memberships
chan_pos <- attr(erps, "chan") # needed for TFCE correction

# average the data in each 12 ms time-bin to decrease the computational
# burden (not needed in serious analyses)
tempdat <- avgBin(erps, "time", 6)

# analyze the effect of the reading group (between-subject factor) and the
# two experimental conditions (stimclass, pairtye; within-subject factors)
# for each channel and time sample (without requesting TFCE correction); this
# means we run 1518 repeated measures ANOVAs
system.time(
    result_eegr <- arrayAnova(tempdat,
                              list(between = "group",
                                   within = c("stimclass", "pairtype"),
                                   w_id = "id"),
                              bwdat = dat_id,
                              nperm = 0L, usetfce = FALSE)
)

# if package 'ez' is installed, you can compare the results; we take only a
# subset of the data because ezANOVA is much slower
if (require(ez)) {
    sub <- list(chan = "O2", time = "207")
    tempdat_ez <- transformArray(y ~ ., tempdat, subset = sub)
    tempdat_ez$group <- factor(dat_id$group[match(tempdat_ez$id, dat_id$id)])
    result_ez <- ezANOVA(tempdat_ez, y, id, .(stimclass, pairtype),
                         between = group)
    # compare results
    ez_F <- result_ez$ANOVA$F   # F values
    ez_p <- result_ez$ANOVA$p   # p-values
    ez_ges <- result_ez$ANOVA$ges   # generalized effect sizes
    eegr_F <- as.vector(
        subsetArray(result_eegr$effect_F_obs, sub))
    eegr_p <- as.vector(
        subsetArray(attr(result_eegr$effect_F_obs, "pvalues"), sub))
    eegr_ges <- as.vector(
        subsetArray(attr(result_eegr$effect_F_obs, "ges"), sub))
    stopifnot(
        all.equal(ez_F, eegr_F),
        all.equal(ez_p, eegr_p),
        all.equal(ez_ges, eegr_ges)
    )
}

# in order to use TFCE correction, the channel neigbourhood matrix is needed
# (see ?chanNb)
ChN <- chanNb(chan_pos, alpha = 0.7)

# now analyze the data by collapsing the pairtypes, and apply TFCE correction
# (note: this will take a couple of seconds); use more randomization
# runs (nperm should be several thousand) in serious analyses
tempdat <- avgDims(tempdat, "pairtype")
result_tfce <- arrayAnova(tempdat,
                          list(between = "group",
                               within = "stimclass",
                               w_id = "id"),
                          bwdat = dat_id,
                          nperm = 499L, useparallel = TRUE, ncores = 2,
                          tfce_options = list(ChN = ChN))

# compare traditional and TFCE p-values
p_all <- extract(result_tfce, c("p", "p_corr"))
p_all <- bindArrays(trad = p_all$p, tfce = p_all$p_corr,
                    along_name = "method")

# plot p-values after -log transformation to increase discriminability;
# note how the sporadic effects disappear
p_plot <- imageValues(-log(p_all)) # returns a ggplot object
p_plot

# you can also use the imagePvalues function to plot discretized p-values
imagePvalues(p_all, pcrit = c(0.01, 0.05, 0.1))
}
\references{
The TFCE correction follows Mensen, A. and Khatami, R. (2013):
Advanced EEG analysis using threshold-free cluster-enhancement and
non-parametric statistics. Neuroimage, 67, 111-118.
doi:10.1016/j.neuroimage.2012.10.027
}

