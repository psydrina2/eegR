% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/array_transform.R
\name{recodeDimnames}
\alias{recodeDimnames}
\alias{recodeDimnames_}
\title{Recode dimension names}
\usage{
recodeDimnames(dat, dim_levels = NULL, dim_ids = NULL)

recodeDimnames_(dat, dim_levels = NULL, dim_ids = NULL)
}
\arguments{
\item{dat}{an array with dimension names}

\item{dim_levels}{a named list of named character vectors. The name of the 
list element identifies the dimension, the names of the character vector 
refer to the original dimension levels, and the values of the character
vector correspond to the new dimension levels. See also Details.}

\item{dim_ids}{a named character vector which is used to rename the dimension
identifiers}
}
\description{
\code{recodeDimnames} renames dimension identifiers and dimension levels
(useful before plotting). \code{recodeDimnames_} does the same in place, 
thus without making any copy.
}
\details{
\code{recodeDimnames} goes through the 'dim_levels' argument first.
If a character vector in 'dim_levels' is not named, it must be of the same
length as the length of the given dimension.
}
\section{Functions}{
\itemize{
\item \code{recodeDimnames_}: Modify by reference
}}

\note{
Use \code{recodeDimnames_} with extra care because it modifies in place
all objects which 'dat' refers to.
}
\examples{
## load example data
data(erps)

## recode the 'subst', 'ident', and 'transp' levels of the 'stimclass' 
## dimension to 'Substitution', 'Identical', and 'Transposition', 
## respectively; also rename the 'stimclass' dimension name to 
## 'Stimulus class'
erps2 <- recodeDimnames(erps, 
                        list(stimclass = c(subst = "Substitution",
                                           ident = "Identical",
                                           transp = "Transposition")),
                        c(stimclass = "Stimulus class"))
 
}
